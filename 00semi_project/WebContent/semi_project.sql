
/* Drop Tables */

DROP TABLE SM3_EVENT_NOTICE CASCADE CONSTRAINTS;
DROP TABLE SM3_IN_ITEM CASCADE CONSTRAINTS;
DROP TABLE SM3_QA_COMM CASCADE CONSTRAINTS;
DROP TABLE SM3_QA CASCADE CONSTRAINTS;
DROP TABLE SM3_ADMIN CASCADE CONSTRAINTS;
DROP TABLE SM3_POINT CASCADE CONSTRAINTS;
DROP TABLE SM3_REVIEW CASCADE CONSTRAINTS;
DROP TABLE SM3_ORDER CASCADE CONSTRAINTS;
DROP TABLE SM3_CART CASCADE CONSTRAINTS;
DROP TABLE SM3_USER CASCADE CONSTRAINTS;
DROP TABLE SM3_HINT CASCADE CONSTRAINTS;
DROP TABLE SM3_ITEM_SIZE CASCADE CONSTRAINTS;
DROP TABLE SM3_ITEM CASCADE CONSTRAINTS;
DROP TABLE SM3_ITEMCATE CASCADE CONSTRAINTS;
DROP TABLE SM3_ITEM_COLOR CASCADE CONSTRAINTS;




/* Create Tables */

CREATE TABLE SM3_ADMIN
(
	ADMIN_NUM number(2,0) NOT NULL,
	ADMIN_ID varchar2(20) NOT NULL,
	ADMIN_PWD varchar2(20) NOT NULL,
	PRIMARY KEY (ADMIN_NUM)
);


CREATE TABLE SM3_CART
(
	CART_NUM number NOT NULL,
	USER_NUM number NOT NULL,
	-- 재고번호
	SIZE_NUM number,
	ORDER_CNT number(4,0),
	ITEM_PRICE number(7,0),
	ORDER_TOTAL number(10,0),
	PRIMARY KEY (CART_NUM)
);


CREATE TABLE SM3_EVENT_NOTICE
(
	EN_NUM number NOT NULL,
	EN_WRITER varchar2(20) NOT NULL,
	EN_TITLE varchar2(80) NOT NULL,
	-- 글많이넣기 LONG
	-- --> 검색 안되는 등 제약 많아서 CLOB으로 변경
	EN_CONTENT clob,
	EN_DATE date,
	EN_ORGIMG varchar2(100),
	EN_SAVIMG varchar2(100),
	ADMIN_NUM number(2,0),
	PRIMARY KEY (EN_NUM)
);


CREATE TABLE SM3_HINT
(
	HINT_NUM number(2,0) NOT NULL,
	HINT_Q varchar2(100),
	PRIMARY KEY (HINT_NUM)
);


CREATE TABLE SM3_IN_ITEM
(
	IN_NUM number NOT NULL,
	SIZE_NUM number,
	ADMIN_NUM number(2,0),
	IN_CNT number(4,0),
	IN_COST number(7,0),
	IN_DATE date,
	PRIMARY KEY (IN_NUM)
);


CREATE TABLE SM3_ITEM
(
	ITEM_NUM number NOT NULL,
	-- 상품이름
	ITEM_NAME varchar2(100),
	CATE_NUM number,
	ITEM_INFO varchar2(1000),
	ITEM_PRICE number(10,0),
	ITEM_ORGIMG varchar2(100),
	ITEM_SAVIMG varchar2(100),
	PRIMARY KEY (ITEM_NUM)
);


CREATE TABLE SM3_ITEMCATE
(
	CATE_NUM number NOT NULL,
	CATE_NAME varchar2(30),
	PRIMARY KEY (CATE_NUM)
);


CREATE TABLE SM3_ITEM_COLOR
(
	COLOR_NUM number(4,0) NOT NULL,
	COLOR_NAME varchar2(20),
	COLOR_CODE varchar2(20),
	PRIMARY KEY (COLOR_NUM)
);


CREATE TABLE SM3_ITEM_SIZE
(
	SIZE_NUM number NOT NULL,
	SIZE_NAME varchar2(20),
	ITEM_NUM number,
	COLOR_NUM number(4,0),
	SIZE_CNT number(4,0),
	PRIMARY KEY (SIZE_NUM)
);


CREATE TABLE SM3_ORDER
(
	ORDER_NUM number NOT NULL,
	CART_NUM number,
	-- 적립금테이블이랑 트랜잭션
	-- 구매확정되면 적립금테이블 포인트 차감
	ORDER_POINT number(7,0),
	-- 총금액-포인트사용액
	ORDER_PAY number(10,0),
	ORDER_RECIPIENT varchar2(30),
	ORDER_POST_ADDR varchar2(10),
	-- 우편번호API
	ORDER_BASIC_ADDR varchar2(100),
	ORDER_DETAIL_ADDR varchar2(100),
	ORDER_PHONE varchar2(20),
	ORDER_DATE date,
	-- 1 배송중
	-- 2 배송완료
	-- 3 구매확정
	-- 4 취소
	-- 5 반품
	ORDER_STATUS number(2,0),
	PRIMARY KEY (ORDER_NUM)
);


CREATE TABLE SM3_POINT
(
	-- 복합기본키(유저번호, 주문번호)
	-- 
	ORDER_NUM number NOT NULL,
	-- 복합기본키(유저번호, 주문번호)
	USER_NUM number NOT NULL,
	ORDER_DATE date,
	POINT number,
	-- INSERT할때
	-- SQL 구문에서 ORDER_DATE+365일
	END_DATE date,
	PRIMARY KEY (ORDER_NUM, USER_NUM)
);


CREATE TABLE SM3_QA
(
	QA_NUM number NOT NULL,
	-- USER_ID 
	QA_WRITER varchar2(20) NOT NULL,
	QA_TITLE varchar2(80) NOT NULL,
	QA_CONTENT long,
	QA_DATE date,
	REF number,
	LEV number(3,0),
	STEP number(3,0),
	USER_NUM number,
	ADMIN_NUM number(2,0),
	PRIMARY KEY (QA_NUM)
);


CREATE TABLE SM3_QA_COMM
(
	COMM_NUM number NOT NULL,
	COMM_WRITER varchar2(20),
	COMM_CONTENT varchar2(1000),
	COMM_DATE date,
	QA_NUM number,
	USER_NUM number,
	ADMIN_NUM number(2,0),
	PRIMARY KEY (COMM_NUM)
);


CREATE TABLE SM3_REVIEW
(
	REVIEW_NUM number NOT NULL,
	REVIEW_ITEM varchar2(50) NOT NULL,
	REVIEW_ORGIMG varchar2(100),
	REVIEW_SAVIMG varchar2(100),
	-- 1~5
	REVIEW_RATING number(2,0) NOT NULL,
	REVIEW_CONTENT varchar2(200),
	REVIEW_DATE date,
	-- 외래키
	ORDER_NUM number,
	USER_NUM number,
	PRIMARY KEY (REVIEW_NUM)
);


CREATE TABLE SM3_USER
(
	USER_NUM number NOT NULL,
	-- 중복되믄안댐
	USER_ID varchar2(20) NOT NULL UNIQUE,
	USER_PWD varchar2(20) NOT NULL,
	USER_NAME varchar2(30) NOT NULL,
	USER_EMAIL varchar2(30) NOT NULL UNIQUE,
	USER_PHONE varchar2(20) NOT NULL,
	USER_POST_ADDR varchar2(10),
	USER_BASIC_ADDR varchar2(100) NOT NULL,
	USER_DETAIL_ADDR varchar2(100),
	USER_REGDATE date,
	HINT_NUM number(2,0) NOT NULL,
	HINT_OK varchar2(50) NOT NULL,
	PRIMARY KEY (USER_NUM)
);



/* Create Foreign Keys */

ALTER TABLE SM3_EVENT_NOTICE
	ADD FOREIGN KEY (ADMIN_NUM)
	REFERENCES SM3_ADMIN (ADMIN_NUM)
;


ALTER TABLE SM3_IN_ITEM
	ADD FOREIGN KEY (ADMIN_NUM)
	REFERENCES SM3_ADMIN (ADMIN_NUM)
;


ALTER TABLE SM3_QA
	ADD FOREIGN KEY (ADMIN_NUM)
	REFERENCES SM3_ADMIN (ADMIN_NUM)
;


ALTER TABLE SM3_QA_COMM
	ADD FOREIGN KEY (ADMIN_NUM)
	REFERENCES SM3_ADMIN (ADMIN_NUM)
;


ALTER TABLE SM3_ORDER
	ADD FOREIGN KEY (CART_NUM)
	REFERENCES SM3_CART (CART_NUM)
;


ALTER TABLE SM3_USER
	ADD FOREIGN KEY (HINT_NUM)
	REFERENCES SM3_HINT (HINT_NUM)
;


ALTER TABLE SM3_ITEM_SIZE
	ADD FOREIGN KEY (ITEM_NUM)
	REFERENCES SM3_ITEM (ITEM_NUM)
;


ALTER TABLE SM3_ITEM
	ADD FOREIGN KEY (CATE_NUM)
	REFERENCES SM3_ITEMCATE (CATE_NUM)
;


ALTER TABLE SM3_ITEM_SIZE
	ADD FOREIGN KEY (COLOR_NUM)
	REFERENCES SM3_ITEM_COLOR (COLOR_NUM)
;


ALTER TABLE SM3_CART
	ADD FOREIGN KEY (SIZE_NUM)
	REFERENCES SM3_ITEM_SIZE (SIZE_NUM)
;


ALTER TABLE SM3_IN_ITEM
	ADD FOREIGN KEY (SIZE_NUM)
	REFERENCES SM3_ITEM_SIZE (SIZE_NUM)
;


ALTER TABLE SM3_POINT
	ADD FOREIGN KEY (ORDER_NUM)
	REFERENCES SM3_ORDER (ORDER_NUM)
;


ALTER TABLE SM3_REVIEW
	ADD FOREIGN KEY (ORDER_NUM)
	REFERENCES SM3_ORDER (ORDER_NUM)
;


ALTER TABLE SM3_QA_COMM
	ADD FOREIGN KEY (QA_NUM)
	REFERENCES SM3_QA (QA_NUM)
;


ALTER TABLE SM3_CART
	ADD FOREIGN KEY (USER_NUM)
	REFERENCES SM3_USER (USER_NUM)
;


ALTER TABLE SM3_POINT
	ADD FOREIGN KEY (USER_NUM)
	REFERENCES SM3_USER (USER_NUM)
;


ALTER TABLE SM3_QA
	ADD FOREIGN KEY (USER_NUM)
	REFERENCES SM3_USER (USER_NUM)
;


ALTER TABLE SM3_QA_COMM
	ADD FOREIGN KEY (USER_NUM)
	REFERENCES SM3_USER (USER_NUM)
;


ALTER TABLE SM3_REVIEW
	ADD FOREIGN KEY (USER_NUM)
	REFERENCES SM3_USER (USER_NUM)
;



/* Comments */

COMMENT ON COLUMN SM3_CART.SIZE_NUM IS '재고번호';
COMMENT ON COLUMN SM3_EVENT_NOTICE.EN_CONTENT IS '글많이넣기 LONG
--> 검색 안되는 등 제약 많아서 CLOB으로 변경';
COMMENT ON COLUMN SM3_ITEM.ITEM_NAME IS '상품이름';
COMMENT ON COLUMN SM3_ORDER.ORDER_POINT IS '적립금테이블이랑 트랜잭션
구매확정되면 적립금테이블 포인트 차감';
COMMENT ON COLUMN SM3_ORDER.ORDER_PAY IS '총금액-포인트사용액';
COMMENT ON COLUMN SM3_ORDER.ORDER_BASIC_ADDR IS '우편번호API';
COMMENT ON COLUMN SM3_ORDER.ORDER_STATUS IS '1 배송중
2 배송완료
3 구매확정
4 취소
5 반품';
COMMENT ON COLUMN SM3_POINT.ORDER_NUM IS '복합기본키(유저번호, 주문번호)
';
COMMENT ON COLUMN SM3_POINT.USER_NUM IS '복합기본키(유저번호, 주문번호)';
COMMENT ON COLUMN SM3_POINT.END_DATE IS 'INSERT할때
SQL 구문에서 ORDER_DATE+365일';
COMMENT ON COLUMN SM3_QA.QA_WRITER IS 'USER_ID ';
COMMENT ON COLUMN SM3_REVIEW.REVIEW_RATING IS '1~5';
COMMENT ON COLUMN SM3_REVIEW.ORDER_NUM IS '외래키';
COMMENT ON COLUMN SM3_USER.USER_ID IS '중복되믄안댐';



